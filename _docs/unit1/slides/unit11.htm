<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="generator" content="pandoc">
  <title>UNIT 1 The web environment</title>
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui">
  <link rel="stylesheet" href="../../../assets/reveal.js/css/reveal.css">
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
  <link rel="stylesheet" href="../../../assets/reveal.js/css/theme/deusto.css" id="theme">
  <link rel="stylesheet" href="style.css"/>
  <!-- Printing and PDF exports -->
  <script>
    var link = document.createElement( 'link' );
    link.rel = 'stylesheet';
    link.type = 'text/css';
    link.href = window.location.search.match( /print-pdf/gi ) ? '../../../assets/reveal.js/css/print/pdf.css' : '../../../assets/reveal.js/css/print/paper.css';
    document.getElementsByTagName( 'head' )[0].appendChild( link );
  </script>
  <!--[if lt IE 9]>
  <script src="../../../assets/reveal.js/lib/js/html5shiv.js"></script>
  <![endif]-->
</head>
<body>

  <div class="reveal">
    <div class="slides">
      
      <div class="static">
        <div class="bottomR"><img src="../../../assets/reveal.js/logo-deusto.png" alt="Universidad de Deusto" /></div>
        <div class="bottomL">
                                <div class="title">UNIT 1<br />The web environment</div>
                  </div>
      </div>
      
<section id="title-slide">
  <h1 class="title">UNIT 1<br />The web environment</h1>
  <p class="subtitle">1.1 How the web works</p>
</section>

<section class="slide level2">

<div class="center">
<figure>
<img data-src="img/process.png" alt="Jennifer NIEDERST ROBBINS, Learning Web Design. O’Reilly: Canada, 2007. 681.374.13/N49j" width="575" /><figcaption>Jennifer NIEDERST ROBBINS, <em>Learning Web Design</em>. O’Reilly: Canada, 2007. 681.374.13/N49j</figcaption>
</figure>
</div>
</section>
<section id="section" class="slide level2">
<h2>1</h2>
<p>You request a web page by either typing its URL (for example, <code>http://jenskitchensite.com</code>) directly in the browser, or by clicking a link on the page.</p>
</section>
<section class="slide level2">

<h3 id="server">Server</h3>
<p>There are many software options, but the most popular ones are: Apache (<span class="highlighted">open source</span>) and Microsoft Internet Information Services (IIS).</p>
<h4 id="ip-addresses">IP addresses</h4>
<p>Each computer on the internet has its own and unique numeric IP address. The Domain Name System (DNS) translates those numeric IPs into server names, which are easier to read and remember.</p>
</section>
<section class="slide level2">

<h3 id="browsers">Browsers</h3>
<p>They are the <strong>client</strong> on the web architecture: they request the information or documents, and the server returns them.</p>
<div class="small">
<p><strong>Graphic desktop browsers</strong> are the most popular, but there are many other ways to experiment navigation on the web: screen readers, text-only browsers… Even graphic browsers are available for very different screen sizes. Web sites must be created so that they are accessible from all these environments.</p>
</div>
<p>The most popular ones are Internet Explorer, Mozilla Firefox, Google Chrome and Safari.</p>
</section>
<section id="section-1" class="slide level2" data-transition="slide-in fade-out">
<h2></h2>
<h3 id="web-page-addresses-urls">Web page addresses (URLs)</h3>
<div class="center">
<p><img data-src="img/url.png" /></p>
</div>
<p><span class="highlighted"><code>http://</code></span></p>
<div class="small">
<p>Defines the protocol that will be used for this particular transaction. The letters HTTP let the server know to use Hypertext Transfer Protocol, or get into <em>web-mode</em>.</p>
</div>
</section>
<section id="section-2" class="slide level2" data-transition="fade">
<h2></h2>
<h3 id="web-page-addresses-urls-1">Web page addresses (URLs)</h3>
<div class="center">
<p><img data-src="img/url.png" /></p>
</div>
<span class="highlighted"><code>www.jendesign.com</code></span>
<div class="small">
<p>Identifies the website by its domain name (<code>jendesign.com</code>). The <code>www.</code> part at the beginning is the particular host name at that domain. The host name <em>www</em> has become a convention, but is not a rule. There can be more than one web site at a domain (sometimes called subdomains).</p>
</div>
</section>
<section id="section-3" class="slide level2" data-transition="fade">
<h2></h2>
<h3 id="web-page-addresses-urls-2">Web page addresses (URLs)</h3>
<div class="center">
<p><img data-src="img/url.png" /></p>
</div>
<span class="highlighted"><code>/2007/samples/first.html</code></span>
<div class="small">
<p>This is the absolute path to the requested HTML document, <code>first.html</code>. The words separated by slashes indicate the pathway through directory levels, starting with the root directory of the host.</p>
</div>
</section>
<section id="section-4" class="slide level2">
<h2>2</h2>
<p>The browser sends an HTTP request to the server named in the URL and asks for the specific file. If the URL specifies a directory (not a file), it is the same as requesting the <span class="highlighted">default file</span> in that directory.</p>
</section>
<section class="slide level2">

<h3 id="default-files">Default files</h3>
<div class="small">
<p>Many addresses do not include a file name, but simply point to a directory. In these cases, the server looks in that directory for a default document, typically named <code>index.html</code>, and sends it back for display.</p>
<p>The name of the default file (also referred to as the index file) may vary, and depends on how the server is configured (it can also be <code>default.htm</code>, <code>index.php</code>…)</p>
<p>The index file is also useful for security. Some servers return the contents of the directory for display in the browser if the default file is not found; one way to prevent people from snooping around in your files is to be sure there is an index file in every directory.</p>
</div>
</section>
<section id="section-5" class="slide level2">
<h2>3</h2>
<p>The server looks for the requested file and issues an HTTP response.</p>
<ol type="1">
<li>If the page is not found, the server returns an error message (typically, <code>404 Not Found</code>)</li>
<li>It the document <em>is</em> found, the server retrieves the requested file and returns it to the browser</li>
</ol>
</section>
<section id="section-6" class="slide level2">
<h2>4</h2>
<p>The browser parses the HTML document. If the page contains images, the browser contacts the server again to request each image file specified in the markup.</p>
</section>
<section class="slide level2">

<h3 id="anatomy-of-a-web-page">Anatomy of a web page</h3>
<div class="center">
<p><img data-src="img/browserview.png" /></p>
</div>
</section>
<section class="slide level2">

<h3 id="html-documents">HTML documents</h3>
<p>The graphically rich and interactive pages we see on the web are generated by simple, text-only documents: just letters, numbers, and a few symbol characters. This text file is referred to as the source document.</p>
<p>HTML →</p>
</section>
<section class="slide level2">

<h3 id="anatomy-of-a-web-page-1">Anatomy of a web page</h3>
<div class="center">
<p><img data-src="img/page.png" /></p>
</div>
</section>
<section id="section-7" class="slide level2">
<h2>5</h2>
<p>The browser inserts each image in the document flow where indicated by the markup and <em>voilà</em>! The assembled web page is displayed for your viewing pleasure.</p>
</section>
    </div>
  </div>

  <script src="../../../assets/reveal.js/lib/js/head.min.js"></script>
  <script src="../../../assets/reveal.js/js/reveal.js"></script>

  <script>

      // Full list of configuration options available at:
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
        // Push each slide change to the browser history
        history: true,

        // Optional reveal.js plugins
        dependencies: [
          { src: '../../../assets/reveal.js/lib/js/classList.js', condition: function() { return !document.body.classList; } },
          { src: '../../../assets/reveal.js/plugin/zoom-js/zoom.js', async: true },
          { src: '../../../assets/reveal.js/plugin/notes/notes.js', async: true }
        ]
      });
    </script>
    </body>
</html>
